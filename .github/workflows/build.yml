name: Build and Release

on:
  workflow_dispatch:
  push:
    branches:
      - release

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Get Version from Package.swift
      id: get_version
      run: |
        VERSION=$(grep -m 1 "version:" Package.swift | awk -F'"' '{print $2}')
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Set up code signing
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        
        # Import certificate
        echo $BUILD_CERTIFICATE_BASE64 | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
        security find-identity -v
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain

    - name: Build Swift package
      run: |
        swift build -c release
        
        # Create app bundle structure
        mkdir -p build/DockAppToggler.app/Contents/{MacOS,Resources}
        cp -r .build/release/DockAppToggler build/DockAppToggler.app/Contents/MacOS/
        cp Info.plist build/DockAppToggler.app/Contents/
        
    - name: Code Sign App
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
      run: |
        /usr/bin/codesign --force --options runtime --sign "Developer ID Application: LimTec GmbH ($TEAM_ID)" build/DockAppToggler.app -v --timestamp --deep

    - name: Create ZIP Archive
      run: |
        cd build
        zip -r DockAppToggler.zip DockAppToggler.app

    - name: Notarize App
      env:
        ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
        ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
        ASC_KEY_CONTENT: ${{ secrets.ASC_KEY_CONTENT }}
      run: |
        # Create temporary file for auth key
        echo "$ASC_KEY_CONTENT" > AuthKey.p8
        
        # Submit for notarization
        xcrun notarytool submit build/DockAppToggler.zip \
          --key AuthKey.p8 \
          --key-id "$ASC_KEY_ID" \
          --issuer "$ASC_ISSUER_ID" \
          --wait
        
        # Staple the notarization ticket
        xcrun stapler staple build/DockAppToggler.app
        
        # Create new zip with stapled app
        cd build
        rm DockAppToggler.zip
        zip -r DockAppToggler.zip DockAppToggler.app
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/DockAppToggler.zip
        draft: true
        prerelease: false
        tag_name: v${{ env.VERSION }}
        name: Release v${{ env.VERSION }}