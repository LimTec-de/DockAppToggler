name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Get Version from Package.swift
      id: get_version
      run: |
        VERSION=$(grep -A 1 'CFBundleShortVersionString' Sources/DockAppToggler/Info.plist | grep string | sed -E 's/<[^>]+>//g' | tr -d ' \t')
        echo "Extracted version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Set up code signing
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        
        # Import certificate
        echo $BUILD_CERTIFICATE_BASE64 | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign -T /usr/bin/productsign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain
        
        # Allow codesign to access keychain
        security set-keychain-settings -t 3600 -l build.keychain

    - name: Build and Package App
      run: |
        # Clean and build
        rm -rf DockAppToggler.app
        swift package resolve
        swift build -c release
        
        # Create app bundle
        mkdir -p DockAppToggler.app/Contents/{MacOS,Resources,Frameworks}
        cp .build/release/DockAppToggler DockAppToggler.app/Contents/MacOS/
        cp Sources/DockAppToggler/Info.plist DockAppToggler.app/Contents/
        cp Sources/DockAppToggler/Resources/icon.icns DockAppToggler.app/Contents/Resources/
        cp DockAppToggler.entitlements DockAppToggler.app/Contents/Resources/
        
        # Create PkgInfo
        echo "APPL????" > DockAppToggler.app/Contents/PkgInfo
        
        # Set permissions
        chmod +x DockAppToggler.app/Contents/MacOS/DockAppToggler
        
        # Copy Sparkle framework
        SPARKLE_PATH=$(find .build -name "Sparkle.framework" -type d | head -n 1)
        cp -R "$SPARKLE_PATH" DockAppToggler.app/Contents/Frameworks/
        
        # Fix framework path
        install_name_tool -change "@rpath/Sparkle.framework/Versions/B/Sparkle" "@executable_path/../Frameworks/Sparkle.framework/Versions/B/Sparkle" DockAppToggler.app/Contents/MacOS/DockAppToggler
        
        # Sign Sparkle framework
        codesign --force --options runtime --sign "Developer ID Application: LimTec GmbH (${{ secrets.TEAM_ID }})" --entitlements DockAppToggler.entitlements DockAppToggler.app/Contents/Frameworks/Sparkle.framework --deep --timestamp
        
        # Sign the app
        codesign --force --options runtime --sign "Developer ID Application: LimTec GmbH (${{ secrets.TEAM_ID }})" --entitlements DockAppToggler.entitlements DockAppToggler.app --deep --timestamp
        
        # Verify signing
        codesign -vv --deep --strict DockAppToggler.app
        
        # Create DMG
        mkdir -p dmg_root
        cp -r DockAppToggler.app dmg_root/
        ln -s /Applications dmg_root/Applications
        hdiutil create -volname "DockAppToggler" -srcfolder dmg_root -ov -format UDZO DockAppToggler.dmg
        
        # Create zip for notarization
        ditto -c -k --keepParent DockAppToggler.app DockAppToggler.zip

    - name: Notarize App
      env:
        ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
        ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
        ASC_KEY_CONTENT: ${{ secrets.ASC_KEY_CONTENT }}
      run: |
        # Save API key
        echo "$ASC_KEY_CONTENT" > AuthKey.p8
        
        # Submit for notarization
        echo "Submitting for notarization..."
        xcrun notarytool submit DockAppToggler.zip \
          --key AuthKey.p8 \
          --key-id "$ASC_KEY_ID" \
          --issuer "$ASC_ISSUER_ID" \
          --wait
        
        # Staple the app
        echo "Stapling app..."
        xcrun stapler staple DockAppToggler.app
        
        # Create final distributions
        ditto -c -k --keepParent DockAppToggler.app DockAppToggler_final.zip
        
        # Create final DMG
        mkdir -p dmg_root_final
        cp -r DockAppToggler.app dmg_root_final/
        ln -s /Applications dmg_root_final/Applications
        hdiutil create -volname "DockAppToggler" -srcfolder dmg_root_final -ov -format UDZO DockAppToggler_final.dmg
        
        # Sign DMG
        codesign --force --sign "Developer ID Application: LimTec GmbH (${{ secrets.TEAM_ID }})" DockAppToggler_final.dmg

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "v${{ env.VERSION }}" \
          --title "DockAppToggler v${{ env.VERSION }}" \
          --draft \
          DockAppToggler_final.zip \
          DockAppToggler_final.dmg